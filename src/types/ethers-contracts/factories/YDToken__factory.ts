/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common"
  import type { YDToken, YDTokenInterface } from "../YDToken";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "initialOwner",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "allowance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientAllowance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "needed",
        "type": "uint256"
      }
    ],
    "name": "ERC20InsufficientBalance",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "approver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidApprover",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidReceiver",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "ERC20InvalidSpender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "INITIAL_SUPPLY",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "burn",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "mint",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040523461041557610d026020813803918261001c81610419565b93849283398101031261041557516001600160a01b03811690819003610415576100466040610419565b90601582527f596944656e6720506c6174666f726d20546f6b656e0000000000000000000000602083015261007b6040610419565b6002815261165160f21b602082015282519091906001600160401b03811161032657600354600181811c9116801561040b575b602082101461030857601f81116103a8575b506020601f821160011461034557819293945f9261033a575b50508160011b915f199060031b1c1916176003555b81516001600160401b03811161032657600454600181811c9116801561031c575b602082101461030857601f81116102a5575b50602092601f821160011461024457928192935f92610239575b50508160011b915f199060031b1c1916176004555b801561022657600580546001600160a01b03198116831790915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a360025469021e19e0c9bab2400000810180911161021257600255805f525f60205260405f2069021e19e0c9bab240000081540190555f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060405169021e19e0c9bab24000008152a36040516108c3908161043f8239f35b634e487b7160e01b5f52601160045260245ffd5b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061013b565b601f1982169360045f52805f20915f5b86811061028d5750836001959610610275575b505050811b01600455610150565b01515f1960f88460031b161c191690555f8080610267565b91926020600181928685015181550194019201610254565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102fe575b601f0160051c01905b8181106102f35750610121565b5f81556001016102e6565b90915081906102dd565b634e487b7160e01b5f52602260045260245ffd5b90607f169061010f565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100d9565b601f1982169060035f52805f20915f5b81811061039057509583600195969710610378575b505050811b016003556100ee565b01515f1960f88460031b161c191690555f808061036a565b9192602060018192868b015181550194019201610355565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610401575b601f0160051c01905b8181106103f657506100c0565b5f81556001016103e9565b90915081906103e0565b90607f16906100ae565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176103265760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146106aa57508063095ea7b31461062857806318160ddd1461060b57806323b872dd1461052c5780632ff2e9dc14610508578063313ce567146104ed57806340c10f191461044157806342966c68146103a157806370a082311461036a578063715018a61461030f5780638da5cb5b146102e757806395d89b41146101cc578063a9059cbb1461019b578063dd62ed3e1461014b5763f2fde38b146100c1575f80fd5b34610147576020366003190112610147576100da6107a3565b6100e2610866565b6001600160a01b0316801561013457600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b34610147576040366003190112610147576101646107a3565b61016c6107b9565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b34610147576040366003190112610147576101c16101b76107a3565b60243590336107cf565b602060405160018152f35b34610147575f366003190112610147576040515f6004548060011c906001811680156102dd575b6020831081146102c9578285529081156102ad5750600114610258575b50819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610779565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b82821061029757506020915082010182610210565b6001816020925483858801015201910190610282565b90506020925060ff191682840152151560051b82010182610210565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101f3565b34610147575f366003190112610147576005546040516001600160a01b039091168152602090f35b34610147575f36600319011261014757610327610866565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610147576020366003190112610147576001600160a01b0361038b6107a3565b165f525f602052602060405f2054604051908152f35b3461014757602036600319011261014757600435331561042e57335f525f60205260405f20548181106104155790805f923384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3005b63391434e360e21b5f523360045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b346101475760403660031901126101475761045a6107a3565b60243590610466610866565b6001600160a01b03169081156104da57600254908082018092116104c65760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610147575f36600319011261014757602060405160128152f35b34610147575f36600319011261014757602060405169021e19e0c9bab24000008152f35b34610147576060366003190112610147576105456107a3565b61054d6107b9565b6001600160a01b0382165f818152600160209081526040808320338452909152902054909260443592915f19811061058b575b506101c193506107cf565b8381106105f05784156105dd5733156105ca576101c1945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610580565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b34610147575f366003190112610147576020600254604051908152f35b34610147576040366003190112610147576106416107a3565b6024359033156105dd576001600160a01b03169081156105ca57335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610147575f366003190112610147575f6003548060011c9060018116801561076f575b6020831081146102c9578285529081156102ad575060011461071a5750819003601f01601f191681019067ffffffffffffffff8211818310176102445761024082918260405282610779565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061075957506020915082010182610210565b6001816020925483858801015201910190610744565b91607f16916106ce565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361014757565b602435906001600160a01b038216820361014757565b6001600160a01b031690811561042e576001600160a01b03169182156104da57815f525f60205260405f205481811061084d57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b6005546001600160a01b0316330361087a57565b63118cdaa760e01b5f523360045260245ffdfea2646970667358221220aca2a2dcee2a325fe87c954c3322a5f3de0a0ae725972fc1f3903a0a69f75ddc64736f6c634300081c0033";

  
      type YDTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: YDTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class YDToken__factory extends ContractFactory {
    
      constructor(...args: YDTokenConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(initialOwner: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(initialOwner, overrides || {});
    };
    override deploy(initialOwner: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(initialOwner, overrides || {}) as Promise<YDToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): YDToken__factory {
      return super.connect(runner) as YDToken__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): YDTokenInterface {
      return new Interface(_abi) as YDTokenInterface;
    }
    
    override attach(address: string | Addressable): YDToken {
      return super.attach(address) as YDToken;
    }
  static connect(address: string, runner?: ContractRunner | null): YDToken {
      return new Contract(address, _abi, runner) as unknown as YDToken;
    }
  }

  
  